<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:spring="http://www.infinispan.org/schemas/spring" 
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd http://www.infinispan.org/schemas/spring http://www.infinispan.org/schemas/infinispan-spring-5.0.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	default-autowire="byName">
	
	<bean id="tiantianSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!-- 	<bean id="tiantianSqlSessionFactory" class="com.vteba.tx.jdbc.mybatis.session.SqlSessionFactoryBean"> -->
		<property name="dataSource" ref="tiantianDataSource" /><!-- sqlSessionFactory对应的数据源，要和事务管理器transactionManager的数据源一致 -->
		<!--指定MyBatis的基本配置文件路径-->
		<property name="configLocation" value="classpath:mybatis/mybatis-tiantian.xml"/>
		<!--指定Mapper映射文件的位置 ，如果映射文件与相应的接口同名，且在同一路径下，
		可以不配置该选项。或者在mybatis基本配置文件中配置，不在此处配置-->
		<property name="mapperLocations">
			<list>
				<value>classpath:/com/vteba/batch/**/mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>	

	<bean id="tiantian2SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!-- 	<bean id="tiantianSqlSessionFactory" class="com.vteba.tx.jdbc.mybatis.session.SqlSessionFactoryBean"> -->
		<property name="dataSource" ref="tiantian2DataSource" /><!-- sqlSessionFactory对应的数据源，要和事务管理器transactionManager的数据源一致 -->
		<!--指定MyBatis的基本配置文件路径-->
		<property name="configLocation" value="classpath:mybatis/mybatis-tiantian.xml"/>
		<!--指定Mapper映射文件的位置 ，如果映射文件与相应的接口同名，且在同一路径下，
		可以不配置该选项。或者在mybatis基本配置文件中配置，不在此处配置-->
		<property name="mapperLocations">
			<list>
				<value>classpath:/com/vteba/batch/**/mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>	

	<!-- 注册Mapper方式二：也可不指定特定mapper，而使用自动扫描包的方式来注册各种Mapper ，配置如下-->
<!-- 	<bean id="tiantianMapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
	<bean id="tiantianMapperScanner" class="com.vteba.tx.jdbc.mybatis.mapper.MapperScannerConfigurer">
		<!-- 如果只指定了basePackage属性，扫描全部借口 -->
		<property name="basePackage" value="com.vteba.batch,com.vteba.common" />
		<!--<property name="markerInterface" value="com.vteba.tx.jdbc.mybatis.mapper.BaseMapper"/> 扫描该接口的子接口 -->
		<property name="annotationClass" value="com.vteba.tx.jdbc.mybatis.annotation.DaoMapper"/><!-- 扫描被该注解标注的接口 -->
		<property name="sqlSessionTemplateBeanName" value="defaultSqlSessionTemplate"/>
<!-- 		<property name="sqlSessionFactoryBeanName" value="tiantianSqlSessionFactory"/> -->
	</bean>
	
	<bean id="defaultSqlSessionTemplate" class="com.vteba.tx.jdbc.mybatis.session.DefaultSqlSessionTemplate">
		<constructor-arg ref="tiantianSqlSessionFactory"/>
		<property name="slaveSqlSessionFactory">
			<map>
				<entry key-ref="tiantian2SqlSessionFactory" value="20"/>
			</map>
		</property>
		<!-- 强制使用主库的dao，包含dao中的所有方法 -->
<!-- 		<property name="forceMasterDaoList"> -->
<!-- 			<list> -->
<!-- 				<value>com.tzg.task.fixedbao.Fixedbao</value> -->
<!-- 				<value>com.tzg.call.back.app.dao.BindbankcardMapper</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
	</bean>
	
</beans>